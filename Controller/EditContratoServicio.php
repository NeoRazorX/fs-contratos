<?php
namespace FacturaScripts\Plugins\Contratos\Controller;

use FacturaScripts\Core\Base\DataBase;
use FacturaScripts\Core\Lib\BusinessDocumentTools;
use FacturaScripts\Core\Lib\ExtendedController\EditController;
use FacturaScripts\Core\Lib\ListFilter\PeriodTools;
use FacturaScripts\Core\Model\Producto;
use FacturaScripts\Dinamic\Lib\Accounting\InvoiceToAccounting;
use FacturaScripts\Dinamic\Model\Cliente;
use FacturaScripts\Dinamic\Model\FacturaCliente;
use FacturaScripts\Plugins\Contratos\Model\ContratoServicio;

class EditContratoServicio extends EditController
{

    public function getModelClassName(): string
    {
        return "ContratoServicio";
    }

    public function getPageData(): array
    {
        $data = parent::getPageData();
        $data["title"] = "ContratoServicio";
        $data["icon"] = "fas fa-search";
        return $data;
    }

    public function createViews()
    {
        parent::createViews(); // TODO: Change the autogenerated stub
    }


    protected function execPreviousAction($action)
    {
        if ($action === 'renovar'){
            $this->renovarServicio();
            return true;
        }

        return parent::execPreviousAction($action);
    }

    protected function execAfterAction($action)
    {
        $contrato = new ContratoServicio();
        $contrato->loadFromCode($this->request->query->get('code'));

        if (isset($contrato->suspendido) && $contrato->suspendido === false )
            $this->addButton('EditContratoServicio', [
                'action' => 'renovar',
                'icon' => 'fas fa-plus',
                'label' => 'Renovar',
                'type' => 'modal',
            ]);

        parent::execAfterAction($action);
    }


    /**
     * FunciÃ³n para renovar el servicio, crea la factura y actualiza el contrato.
     */
    private function renovarServicio()
    {

        if (!$this->request->query->get('code')){
            $this->Toolbox()->log()->error('No hay contrato para renovar.');
            return;
        }

        $date = $this->request->request->get('date');


        $res = ContratoServicio::renewService($this->request->query->get('code'), $date);
    }

}
